# This is a basic workflow to help you get started with Actions

name: Deploy-ALZ

env:
      CGSUBID: "cg01lzp001"
      ENVID: "dev"
      REGIONID: "uks"
      REGIONNAME: "uksouth" 
      
# Controls when the workflow will run
on:
  # Triggers the workflow on push or pull request events but only for the master branch
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  alz:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
      - uses: actions/checkout@v2
      
      - name: Azure Login
        uses: azure/login@v1
        with:
          creds: ${{ secrets.AZURE_CREDENTIALS }}
          enable-AzPSSession: true
          environment: azurecloud
          allow-no-subscriptions: true
          
      - name: Azure PowerShell Action
        uses: Azure/powershell@v1
        with:
          # Specify the Az PowerShell script here.
          inlineScript: |
            $rgName = 'rg-'"${{ env.CGSUBID }}"'-'"${{ env.REGIONID }}"'-'"${{ env.ENVID }}"'-network'
            $rgName
            $vnetName = 'vnet-'"${{ env.CGSUBID }}"'-'"${{ env.REGIONID }}"'-'"${{ env.ENVID }}"'-01'
            $vnetName
            $regionName = "${{ env.REGIONNAME }}" 
            $uri = 'https://fa-ipam-04.azurewebsites.net/api/RegisterAddressSpace?code=R9O27f/s1UzaSrQHDBbsuRs2LG9SKU9uW7J1YEaarX3iER4kxjWCCA=='
            $uri
            $body = @{
              'InputObject' = @{
                'ResourceGroup' = $rgName
                'VirtualNetworkName' = $vnetName
              }
            } | ConvertTo-Json
            $body
            $params = @{
                  'Uri'         = $uri
                  'Method'      = 'POST'
                  'ContentType' = 'application/json'
                  'Body'        = $Body
            }
            $params
            $Result = Invoke-RestMethod @params
            New-AzResourceGroup -Name $rgName -Location $regionName -Force
            New-AzVirtualNetwork -Name $vnetName -ResourceGroupName $rgName -Location $regionName -AddressPrefix $Result.NetworkAddress
          azPSVersion: latest 
          errorActionPreference: Stop
          
